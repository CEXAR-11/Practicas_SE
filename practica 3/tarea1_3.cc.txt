#include <iostream>
#include <random>

using namespace std;

#define N 2   //matrices 2x2

double A[N][N], B[N][N], K[N][N], R[N][N];

using namespace std;

double** multiplicaMatrices(double A[N][N], double B[N][N]) {
    double** result = new double*[N];
    for (int i = 0; i < N; i++) {
        result[i] = new double[N];
    }

    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            result[i][j] = 0;
            for (int k = 0; k < N; k++) {
                result[i][j] += A[i][k] * B[k][j];
            }
        }
    }

    return result;
}

int main()
{
    mt19937 mt(random_device{}()); // motor de números aleatorios
    uniform_real_distribution<double> crearDouble0_1(0.0, 1.0);
    uniform_int_distribution<int> crearInt0_255(0, 255);
    
    // INICIALIZACIÓN DE MATRICES
    for (int i=0; i<N; i++){
        for (int j=0; j<N; j++){
            A[i][j] = crearDouble0_1(mt);
            B[i][j] = crearDouble0_1(mt);
            K[i][j] = crearInt0_255(mt);
    	}
    }
    
    // C = AxB
    double** C = multiplicaMatrices(A,B);
    
    // R = C·K
    for (int i=0; i<N; i++){
        for (int j=0; j<N; j++){
            R[i][j] = C[i][j]*K[i][j];
        }
    }
    
    // LIBERAR MEMORIA
    for (int i = 0; i < N; i++) {
        delete[] C[i];
    }
    delete[] C;

    return 0;
}
